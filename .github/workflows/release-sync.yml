name: Release Sync and Publish

on:
  push:
    tags:
      - 'v*'
      - 'diskcache_rs-v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-and-publish:
    name: Sync versions and publish
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'loonghao' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.11"
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install dependencies
        run: uv sync --group dev
      
      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if [[ $TAG_NAME == diskcache_rs-v* ]]; then
            VERSION=${TAG_NAME#diskcache_rs-v}
          elif [[ $TAG_NAME == v* ]]; then
            VERSION=${TAG_NAME#v}
          else
            echo "Invalid tag format: $TAG_NAME"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
      
      - name: Sync version to pyproject.toml
        run: |
          echo "Syncing version ${{ steps.version.outputs.version }} to pyproject.toml"
          python scripts/sync_version.py
      
      - name: Commit version sync if needed
        run: |
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add pyproject.toml
            git commit -m "chore: sync version to pyproject.toml"
            git push origin HEAD:main
          fi
      
      - name: Build and publish to PyPI
        run: |
          echo "ðŸš€ Building and publishing version ${{ steps.version.outputs.version }}"
          # Trigger the existing build and release workflows
          gh workflow run build.yml --ref ${{ github.ref }}
          gh workflow run build-abi3.yml --ref ${{ github.ref }}
          
          # Wait a bit for workflows to start
          sleep 30
          
          echo "âœ… Build workflows triggered for ${{ github.ref }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
