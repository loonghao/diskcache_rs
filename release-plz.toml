[workspace]
# Release configuration
release_always = false  # Only release when merging release PR
semver_check = true     # Check for API breaking changes
dependencies_update = true  # Update dependencies with cargo update

# Git configuration
git_release_enable = true
git_tag_name = "v{{ version }}"
git_release_name = "v{{ version }}"

# PR configuration
pr_labels = ["release"]
pr_name = "chore: release v{{ version }}"

# Publishing configuration
publish = false  # We'll handle publishing manually after syncing versions
publish_timeout = "10m"

# Changelog configuration
changelog_update = true

[changelog]
header = """# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]
"""

body = """
## [{{ version }}]{% if release_link %}({{ release_link }}){% endif %} - {{ timestamp | date(format="%Y-%m-%d") }}

{% for group, commits in commits | group_by(attribute="group") -%}
### {{ group | upper_first }}
{% for commit in commits -%}
- {% if commit.scope %}**{{ commit.scope }}**: {% endif %}{% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message }}{% if commit.links %} ({% for link in commit.links %}[{{ link.text }}]({{ link.href }}){% if not loop.last %}, {% endif %}{% endfor %}){% endif %}
{% endfor -%}
{% endfor -%}
"""

commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactoring" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Testing" },
    { message = "^docs", group = "Documentation" },
    { message = "^build", group = "Build System" },
    { message = "^ci", group = "Continuous Integration" },
    { message = "^chore", group = "Miscellaneous" },
    { message = "^revert", group = "Reverts" },
    { message = "^.*", group = "Other" },
]

commit_preprocessors = [
    # Replace issue/PR numbers with links
    { pattern = "\\(#([0-9]+)\\)", replace = "([#${1}](https://github.com/loonghao/diskcache_rs/pull/${1}))" },
]
